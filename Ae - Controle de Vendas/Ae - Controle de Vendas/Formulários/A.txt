using System;
using System.Data;
using System.Globalization;
using System.Linq;
using System.Windows.Forms;

namespace Ae___Controle_de_Vendas.Formulários
{
    public partial class frmProduto : Form
    {
        public bool load = false;
        public Produto produto = new Produto();

        public frmProduto()
        {
            InitializeComponent();
        }

        private void btnLimpar_Click(object sender, EventArgs e)
        {
            LimparCampos();
        }

        private void LimparCampos()
        {
            txtCodigo.Clear();
            txtPesquisa.Clear();
            txtNome.Clear();
            txtPreco.Clear();
            cboCategoria.SelectedIndex = -1;
            txtPesquisa.Focus();
            CarregarGridCategoria();
        }

        private void PreencherClasse()
        {
            produto.Codigo = Convert.ToInt32(txtCodigo.Text);
            produto.Nome = txtNome.Text;
            produto.CategoriaId = Convert.ToInt32(cboCategoria.SelectedValue);
        }

        private void PreencherFormulario()
        {
            txtNome.Text = produto.Nome;
            txtCodigo.Text = produto.Codigo.ToString(); // Supondo que produto.Codigo seja um número inteiro ou decimal
            txtPreco.Text = produto.Preco.ToString("C", CultureInfo.GetCultureInfo("pt-BR"));
            cboCategoria.SelectedValue = produto.CategoriaId;
        }

        private void CarregarCategorias()
        {
            try
            {
                DataTable dt = produto.getCategorias();
                cboCategoria.DataSource = dt;
                cboCategoria.DisplayMember = "Descricao";
                cboCategoria.ValueMember = "Id";
                cboCategoria.SelectedIndex = -1;
            }
            catch (Exception ex)
            {
                throw new Exception("Erro ao carregar as permissões: " + ex.Message);
            }
        }

        private string ValidarCampos()
        {
            string msgError = string.Empty;
            if (txtNome.Text == String.Empty)
            {
                msgError = "Preencha o Campo Nome \n";
            }

            if (txtCodigo.Text == String.Empty)
            {
                msgError += "Preencha o Campo Codigo \n";
            }

            if (txtPreco.Text == string.Empty)
            {
                msgError += "Preencha o Campo Preço";
            }

            if (cboCategoria.SelectedIndex == -1)
            {
                msgError += "Preencha A Categoria \n";
            }

            return msgError;
        }

        private void CarregarGridCategoria()
        {
            try
            {
                grdDados.DataSource = produto.Consultar();
                grdDados.Columns[0].Visible = false;
                grdDados.Columns[4].Visible = false;
                grdDados.Columns[1].Width = 100;
                grdDados.Columns[2].Width = 250;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Erro-->" + ex.Message, "Erro",
                    MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void frmProduto_Load(object sender, EventArgs e)
        {
            load = true;
            grdDados.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
            CarregarGridCategoria();
            CarregarCategorias();
        }

        private void btnAdicionar_Click(object sender, EventArgs e)
        {
            try
            {
                string campos = ValidarCampos();

                if (campos == string.Empty)
                {
                    PreencherClasse();
                    produto.Gravar();
                    MessageBox.Show("Produto Adicionado/Alterado Com Sucesso!", "Cadastro Produto", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                else
                {
                    MessageBox.Show(campos, "Erro de Preenchimento", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Erro ao gravar o produto: " + ex.Message);
            }
        }

        private void grdDados_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)
        {
            if (e.ColumnIndex == 3 && e.Value != null && e.Value != DBNull.Value)
            {
                if (decimal.TryParse(e.Value.ToString(), out decimal valor))
                {
                    e.Value = valor.ToString("C", CultureInfo.GetCultureInfo("pt-BR"));
                    e.FormattingApplied = true;
                }
            }
        }

        private void txtPesquisa_TextChanged(object sender, EventArgs e)
        {
            produto = new Produto();
            if (rdbNome.Checked)
            {
                produto.Nome = txtPesquisa.Text;
                CarregarGridCategoria();
            }
            else if (rdbCodigo.Checked)
            {
                if (txtPesquisa.Text.Length > 1)
                    produto.Codigo = Convert.ToInt32(txtPesquisa.Text);
                CarregarGridCategoria();
            }
        }

        private void txtPesquisa_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (rdbCodigo.Checked)
            {
                e.Handled = !char.IsDigit(e.KeyChar) && !char.IsControl(e.KeyChar);
            }
        }

        private void grdDados_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            try
            {
                if (grdDados.SelectedRows.Count > 0)
                {
                    int produtoId = Convert.ToInt32(grdDados.SelectedRows[0].Cells[0].Value);
                    produto = new Produto();
                    produto.Id = produtoId;

                    produto.Consultar();
                    txtPreco.Text = produto.Preco.ToString("C", CultureInfo.GetCultureInfo("pt-BR"));

                    PreencherFormulario();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Erro-->" + ex.Message, "Erro", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void rdbNome_CheckedChanged(object sender, EventArgs e)
        {
            LimparCampos();
            CarregarGridCategoria();
        }

        private void txtPreco_TextChanged(object sender, EventArgs e)
        {
            TextBox textBox = sender as TextBox;
            if (textBox == null) return;

            string valorTexto = textBox.Text.Replace("R$", "").Trim();

            if (decimal.TryParse(valorTexto, NumberStyles.Currency, CultureInfo.GetCultureInfo("pt-BR"), out decimal preco))
            {
                textBox.Text = preco.ToString("C", CultureInfo.GetCultureInfo("pt-BR"));
            }
            else
            {
                MessageBox.Show("Valor de preço inválido.");
            }
        }
    }
}
